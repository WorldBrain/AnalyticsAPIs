{
  "name": "analyticsserver",
  "version": "1.0.0",
  "description": "Analytics Server for storing the eventlog in AWS S3",
  "main": "lambda.js",
  "config": {
    "s3BucketName": "YOUR_UNIQUE_BUCKET_NAME",
    "region": "YOUR_AWS_REGION",
    "cloudFormationStackName": "AwsServerlessExpressStack",
    "functionName": "YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME",
    "accountId": "YOUR_ACCOUNT_ID"
  },
  "scripts": {
    "start": "node build/main.js",
    "prepare": "tsc",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WorldBrain/AnalyticsAPIs.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/WorldBrain/AnalyticsAPIs/issues"
  },
  "homepage": "https://github.com/WorldBrain/AnalyticsAPIs#readme",
  "dependencies": {
    "@types/uuid": "^3.4.3",
    "aws-sdk": "^2.249.1",
    "aws-serverless-express": "^3.2.0",
    "body-parser": "^1.18.3",
    "compression": "^1.7.2",
    "cors": "^2.8.4",
    "csv-stringify": "^3.0.0",
    "dotenv": "^6.0.0",
    "express": "^4.16.3",
    "fast-csv": "^2.4.1",
    "http-proxy": "^1.17.0",
    "source-map-support": "^0.5.6",
    "uuid": "^3.2.1"
  },
  "devDependencies": {
    "@types/body-parser": "^1.17.0",
    "@types/buffers": "^0.1.31",
    "ts-node": "^6.0.5",
    "typescript": "^2.8.4"
  }
}
